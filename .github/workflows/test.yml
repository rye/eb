name: Check and Test

on:
  push:
  schedule:
    - cron: 15 */6 * * *

jobs:
  check:
    name: Check the code
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust: [stable, beta]
    steps:
      - name: Install the appropriate Rust toolchain
        run: |
          rustup toolchain install ${{ matrix.rust }}
          rustup default ${{ matrix.rust }}
      - uses: actions/checkout@v2
      - name: Run rustfmt
        run: |
          rustup component add rustfmt
          cargo fmt --all -- --check
      - name: Run clippy
        run: |
          rustup component add clippy
          cargo clippy --workspace --all-features --all-targets -- -D clippy::all -W clippy::cargo -W clippy::pedantic -W clippy::cognitive-complexity

  test:
    name: Test the code
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust: [stable, beta, nightly]
    steps:
      - name: Install the appropriate Rust toolchain
        run: |
          rustup toolchain install ${{ matrix.rust }}
          rustup default ${{ matrix.rust }}
      - uses: actions/checkout@v2
      - name: Run cargo test
        run: |
          cargo test --workspace --all-features --all-targets --no-fail-fast

  smoke-test:
    name: Run smoke tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust: [stable]
    steps:
      - name: Install the appropriate Rust toolchain
        run: |
          rustup toolchain install ${{ matrix.rust }}
          rustup default ${{ matrix.rust }}
      - uses: actions/checkout@v2
      - name: Pre-build in release mode
        run: |
          cargo build --release
      - name: Run smoke test scripts
        run: |
          find tests -iname '*.t.sh' -print0 | xargs -0 -L1 sh

  coverage:
    name: Measure test coverage
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [nightly]
    steps:
      - name: Install the appropriate Rust toolchain
        run: |
          rustup toolchain install ${{ matrix.rust }} --component llvm-tools-preview
          rustup default ${{ matrix.rust }}
      - name: Install grcov
        run: cargo install grcov
      - uses: actions/checkout@v1
      - name: Run tests with profiling
        run: |
          cargo test --workspace --all-features --no-fail-fast
        env:
          LLVM_PROFILE_FILE: "distringo-%p-%m.profraw"
          RUSTFLAGS: >
            -Zinstrument-coverage
      - name: Run grcov
        run: >
          grcov .
          -s .
          --binary-path ./target/debug/
          -t lcov
          --llvm
          --branch
          --ignore-not-existing
          -o ./lcov.info
      - name: Upload coverage
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: bash <(curl -s https://codecov.io/bash) -X gcov
      - uses: actions/upload-artifact@v1
        with:
          name: lcov.info
          path: ./lcov.info
